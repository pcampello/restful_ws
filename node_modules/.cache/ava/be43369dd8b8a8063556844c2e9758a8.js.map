{"version":3,"sources":["categories.test.js"],"names":["test","require","connection","errorHandler","categories","create","save","beforeEach","t","query","after","always","list","all","is","length","result","category","name","updated","update","affectedRows","removed","del"],"mappings":";;AACA,MAAMA,OAAOC,QAAQ,KAAR,CAAb;;AAEA,MAAM,EAAEC,UAAF,EAAcC,YAAd,KAA+BF,QAAQ,SAAR,CAArC;;AAEA,MAAMG,aAAaH,QAAQ,eAAR,EAAyB,EAAEC,UAAF,EAAcC,YAAd,EAAzB,CAAnB;;AAEA,MAAME,SAAS,MAAMD,WAAWE,IAAX,CAAgB,eAAhB,CAArB;;AAEAN,KAAKO,UAAL,CAAgBC,KAAKN,WAAWO,KAAX,CAAiB,2BAAjB,CAArB;AACAT,KAAKU,KAAL,CAAWC,MAAX,CAAkBH,KAAKN,WAAWO,KAAX,CAAiB,2BAAjB,CAAvB;;AAEAT,KAAK,oBAAL,EAA2B,MAAMQ,CAAN,IAAW;AACrC,OAAMH,QAAN;AACA,OAAMO,OAAO,MAAMR,WAAWS,GAAX,EAAnB;AACAL,GAAEM,EAAF,CAAKF,KAAKR,UAAL,CAAgBW,MAArB,EAA6B,CAA7B;AACA,CAJD;;AAMAf,KAAK,sBAAL,EAA6B,MAAMQ,CAAN,IAAW;AACvC,OAAMQ,SAAS,MAAMX,QAArB;AACAG,GAAEM,EAAF,CAAKE,OAAOC,QAAP,CAAgBC,IAArB,EAA2B,eAA3B;AACA,CAHD;;AAKAlB,KAAK,0BAAL,EAAiC,MAAMQ,CAAN,IAAW;AAC3C,OAAMH,QAAN;AACA,OAAMc,UAAU,MAAMf,WAAWgB,MAAX,CAAkB,CAAlB,EAAqB,uBAArB,CAAtB;AACAZ,GAAEM,EAAF,CAAKK,QAAQF,QAAR,CAAiBC,IAAtB,EAA4B,uBAA5B;AACAV,GAAEM,EAAF,CAAKK,QAAQE,YAAb,EAA2B,CAA3B;AACA,CALD;;AAOArB,KAAK,sBAAL,EAA6B,MAAMQ,CAAN,IAAW;AACvC,OAAMH,QAAN;AACA,OAAMiB,UAAU,MAAMlB,WAAWmB,GAAX,CAAe,CAAf,CAAtB;AACAf,GAAEM,EAAF,CAAKQ,QAAQD,YAAb,EAA2B,CAA3B;AACA,CAJD","file":"categories.test.js","sourcesContent":["\nconst test = require('ava')\n\nconst { connection, errorHandler } = require('./setup')\n\nconst categories = require('../categories')({ connection, errorHandler })\n\nconst create = () => categories.save('category-test')\n\ntest.beforeEach(t => connection.query('TRUNCATE table categories'))\ntest.after.always(t => connection.query('TRUNCATE table categories'))\n\ntest('Lista de categoria', async t => {\n\tawait create()\n\tconst list = await categories.all()\n\tt.is(list.categories.length, 1)\n})\n\ntest('Criação de categoria', async t => {\n\tconst result = await create()\n\tt.is(result.category.name, 'category-test')\n})\n\ntest('Atualização de categoria', async t => {\n\tawait create()\n\tconst updated = await categories.update(1, 'category-test-updated')\n\tt.is(updated.category.name, 'category-test-updated')\n\tt.is(updated.affectedRows, 1)\n})\n\ntest('Remoção de categoria', async t => {\n\tawait create()\n\tconst removed = await categories.del(1)\n\tt.is(removed.affectedRows, 1)\n})\n"]}